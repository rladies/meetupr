% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auth.R
\name{meetup_auth_status}
\alias{meetup_auth_status}
\alias{has_auth}
\title{Check Authentication Status for Meetup API}
\usage{
meetup_auth_status(
  client_name = Sys.getenv("MEETUP_CLIENT_NAME", "meetupr"),
  silent = FALSE
)

has_auth(client_name = Sys.getenv("MEETUP_CLIENT_NAME", "meetupr"))
}
\arguments{
\item{client_name}{A string representing the name of the client. By
default, it is set to \code{"meetupr"} and retrieved from the
\code{MEETUP_CLIENT_NAME} environment variable.}

\item{silent}{A \code{logical} indicating whether to suppress output
messages. Defaults to \code{FALSE}.}
}
\value{
logical. \code{TRUE} if a valid token
is found, \code{FALSE} otherwise.
If \code{silent} is \code{FALSE}, the function outputs status messages.
}
\description{
This function verifies if a user is
authenticated to interact with the Meetup
API by checking the existence of token
cache files in the specified directory.
}
\details{
The function checks the \code{httr2} OAuth cache directory for encrypted
token files (\code{.rds.enc}) associated with the specified client. Based on
the results, it provides feedback about the authentication status. Multiple
tokens in the cache directory trigger a warning, while a missing token or
cache directory result in an error message.
}
\section{Functions}{
\itemize{
\item \code{has_auth()}: Check if authenticated
to Meetup API. Uses silent mode.

}}
\examples{
\dontrun{
# Check authentication status with default client name
status <- meetup_auth_status()

# Check authentication status with a specific client name
status <- meetup_auth_status(client_name = "custom_client")

# Suppress output messages
status <- meetup_auth_status(silent = TRUE)
}

}
\seealso{
\code{\link[httr2]{oauth_cache_path}}, \code{\link[cli]{cli_alert}}
}
